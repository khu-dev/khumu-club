// Code generated by entc, DO NOT EDIT.

package likeclub

const (
	// Label holds the string label denoting the likeclub type in the database.
	Label = "like_club"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeClub holds the string denoting the club edge name in mutations.
	EdgeClub = "club"
	// Table holds the table name of the likeclub in the database.
	Table = "like_clubs"
	// ClubTable is the table the holds the club relation/edge.
	ClubTable = "like_clubs"
	// ClubInverseTable is the table name for the Club entity.
	// It exists in this package in order to avoid circular dependency with the "club" package.
	ClubInverseTable = "clubs"
	// ClubColumn is the table column denoting the club relation/edge.
	ClubColumn = "club_likes"
)

// Columns holds all SQL columns for likeclub fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "like_clubs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"club_likes",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
