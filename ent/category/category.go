// Code generated by entc, DO NOT EDIT.

package category

const (
	// Label holds the string label denoting the category type in the database.
	Label = "category"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "name"
	// EdgeClubs holds the string denoting the clubs edge name in mutations.
	EdgeClubs = "clubs"
	// ClubFieldID holds the string denoting the ID field of the Club.
	ClubFieldID = "id"
	// Table holds the table name of the category in the database.
	Table = "categories"
	// ClubsTable is the table the holds the clubs relation/edge. The primary key declared below.
	ClubsTable = "category_clubs"
	// ClubsInverseTable is the table name for the Club entity.
	// It exists in this package in order to avoid circular dependency with the "club" package.
	ClubsInverseTable = "clubs"
)

// Columns holds all SQL columns for category fields.
var Columns = []string{
	FieldID,
}

var (
	// ClubsPrimaryKey and ClubsColumn2 are the table columns denoting the
	// primary key for the clubs relation (M2M).
	ClubsPrimaryKey = []string{"category_id", "club_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
